# This is a sample metadata properties file.
#
# Use the metadata.properties file to specify behavior during packaging.
#
#
# Placement and Precedence
#
# The metadata.properties file applies to all files and subdirectories in the directory where it is found, including the root directory for SQL scripts.
# Additional metadata.properties files can be used in the subdirectories. A property set in a subdirectory overrides the same property set in a parent directory.
#
#
# The following properties can be set in the metadata.properties file:
#
# labels             - One or more labels that identify this set of changes so they can be easily identified and deployed as a group
#                      labelName[,labelName...]
#
# contexts           - One or more context names to associate a changes with specified environments.
#                      contextName[,contextName...]
#
# allowRepackaging   - DEPRECATED starting with Datical DB v4.37. Use [rerunnable] instead.
#                      Starting with Datical DB v4.21, this property controls whether you can reuse a filename. The default value is 'false'.
#
# archive            - DEPRECATED starting with Datical DB v4.37. Use rerunnable instead.
#                      Starting with Datical DB v4.21, this property controls whether files in the data_dml directory get copied to the archive directory.
#                      The default value is 'true'.
#
# rerunnable         - Classify SQL scripts as rerunnable (true) or non-rerunnable (false). Use it in place of the [archive] and [allowRepackaging] properties.
#                      Set rerunnable to 'true' or 'false':
#                          true - SQL code file is not archived. It can be repackaged.
#                          false - SQL code file is archived. It cannot be repackaged.
#
#                      If not set, the value is assigned based on its type (the folder where it is placed in SCM):
#                          ddl - rerunnable=false
#                          data_dml - rerunnable=false
#                          sql_direct - rerunnable=false
#                          sql - rerunnable=false
#                          procedure - rerunnable=true
#                          package - rerunnable=true
#                          packagebody - rerunnable=true
#                          function - rerunnable=true
#                          trigger - rerunnable=true
#                          view - rerunnable=true
#
#                      Important: although the use of archive and allowRepackaging are allowed, they are deprecated.
#                      In addition, the following combinations of settings now cause an error during packaging:
#                          archive=true and allowRepackaging=true
#                          archive=false and allowRepackaging=false
#
#                      Also you can use Flexible Folder Names. When you use flexible folder names it is important to specify rerunnable correctly.
#
#                      @since Datical DB v4.37
#
# packageMethod      - Specifies how to package the file. One of 'convert', 'direct', 'data_dml', 'sqlfile', 'storedlogic', 'ssis'.
#                      Packager further parses storedlogic files to determine their type, one of 'function', 'procedure', 'package', 'packagebody', 'trigger', 'view'.
#                      Use the 'changelog' value when packaging Liquibase changelogs. They are processed differently than SQL scripts.
#
#                      @since Datical DB v5.0
#
# ignore             - If 'true' - process files in this directory and all subdirectories.
#
# schemaName         - Schema name or comma-separated list of schema names.
#                      Use either a literal value or a property. The property must exist in the changelog.
#                      If you use fully-qualified object names in SQL scripts, the schema names in the SQL scripts must match the schema names in the project.
#                      Packager returns an error if it encounters a schema reference that is not defined in the project.
#
#                      For multi-database projects set, schemaName in the form <database>.<schema>.
#                      Starting in version 5.4, you can use a wildcard for the schema: <database>.*.
#                      This capability allows you to manage all SQL scripts for the database in a single folder.
#
#                      WARNING
#                      Do not  use [schemaName] if you are using databaseBackupMode=on_demand in deployPackager.properties.
#
# versionStrategy    - Specifies how to deploy existing versions of changesets if multiple versions are available to deploy.
#                      Values are not case-sensitive. 
#                          deployAll - Deploy all eligible versions in the order they appear in changelog.xml. Default value.
#                                      This has been the strategy used historically (before versioning).
#                          deployLatest - deploy only the latest eligible version. 
#
#                      If versionStrategy is set to any other value, processing stops with an error.
#                      A changeset is eligible to deploy if it meets criteria set in the deploy operation (label expression).
#
#                      @since Datical DB v4.31
#
# The following property is only allowed in the root directory (sqlScmSQLBaseDir) and is not allowed in the subdirectories.
# folderOrder        - Comma separated list of folder names to enforce the package order of files. This can be used
#                      when packageMethod ordering (deployPacakger property) is insufficient.
#
#
# disablePropertySubstitution - If 'true' - disables variable substitution performed by packager prior to packaging script.
#                      Default value 'false'
#
#                      @since Datical DB v2019.2.4
#
### Microsoft SQL Server ###
#
# SQL Server Integration Services (SSIS) related properties
#
# ssisPkgName        - Name of an SSIS package file, including extension (.dtsv)
#
# ssisConfig         - Name of an SSIS configuration file, including extension (.dtsConfig)
#
# ssisDestPath       - Destination directory under SSISDB in the SQL Server database.
#
# ssisDestType       - How deployed SSIS files are stored on the destination SQL Server.
#                      Default is 'SQL' - store the files in the SQL Server database on the destination server.
#
# ssisPkgName        - Name of an SSIS package file (.dtsx)
#
# ssisProjectName    - Name of anSSIS project file (.ispac)
#
# ssisSupportFileDestPath -
#                      Windows shared drive destination for support files that accompany an SSIS package file (.dtsx)
#                      Example: \\SSIS-TEST\SSIS_SHARED
#
schemaName=SALES

